"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[620],{488:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new MockRemoteFunction object.","params":[{"name":"client","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"MockRemoteEvent"}],"function_type":"static","source":{"line":42,"path":"src/MockRemoteFunction.lua"}},{"name":"invokeServer","desc":"Sends a request to the server and yields until a response is received","params":[{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","yields":true,"source":{"line":78,"path":"src/MockRemoteFunction.lua"}},{"name":"invokeClient","desc":"Sends a request to the client and yields until a response is received","params":[{"name":"client","desc":"","lua_type":"any"},{"name":"...","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","yields":true,"source":{"line":100,"path":"src/MockRemoteFunction.lua"}},{"name":"getClient","desc":"Gets the passed client argument in the constructor","params":[],"returns":[{"desc":"","lua_type":"any"}],"function_type":"method","source":{"line":120,"path":"src/MockRemoteFunction.lua"}},{"name":"destroy","desc":"Prepares the MockRemoteFunction for garbage collection","params":[],"returns":[],"function_type":"method","source":{"line":127,"path":"src/MockRemoteFunction.lua"}}],"properties":[{"name":"OnClientInvoke","desc":"Callback property to handle requests on client\\n\\n    ","lua_type":"function","source":{"line":51,"path":"src/MockRemoteFunction.lua"}},{"name":"OnServerInvoke","desc":"Callback property to handle requests on server\\n\\n    ","lua_type":"function","source":{"line":58,"path":"src/MockRemoteFunction.lua"}}],"types":[],"name":"MockRemoteFunction","desc":"MockRemoteFunction class","source":{"line":8,"path":"src/MockRemoteFunction.lua"}}')}}]);