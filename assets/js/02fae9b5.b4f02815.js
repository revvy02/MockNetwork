"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[331],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return v}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),m=c(n),v=a,f=m["".concat(s,".").concat(v)]||m[v]||p[v]||o;return n?r.createElement(f,l(l({ref:t},u),{},{components:n})):r.createElement(f,l({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76647:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var r=n(87462),a=n(63366),o=(n(67294),n(3905)),l=["components"],i={},s=void 0,c={type:"mdx",permalink:"/MockNetwork/",source:"@site/pages/index.md"},u=[{value:"Usage",id:"usage",children:[],level:2},{value:"Install using Package Manager",id:"install-using-package-manager",children:[],level:2},{value:"Roblox Remote Behavior",id:"roblox-remote-behavior",children:[],level:2},{value:"Examples",id:"examples",children:[],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("p",null,"MockNetwork is designed for writing tests for things that have side effects across a network.\nExamples include things like a networking library, or a player DataStore replication library."),(0,o.kt)("h2",{id:"install-using-package-manager"},"Install using Package Manager"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://wally.run/package/revvy02/mocknetwork"},"MockNetwork can be installed as a package from Wally")),(0,o.kt)("h2",{id:"roblox-remote-behavior"},"Roblox Remote Behavior"),(0,o.kt)("p",null,"MockNetwork serves to replicate specific behavior of Roblox's RemoteEvent and RemoteFunction instances such as the following:"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Queueing"),"\\\nFiring a remote will queue the request on the receiving side until a handler is set or a connection is made"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Mutates Instance Keys in Tables"),"\\\nPassing a table that has an instances as keys will result in the keys being converted to strings"),(0,o.kt)("h2",{id:"examples"},"Examples"),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Using the Server class"),"\\\nCan be used if you want to test behavior for multiple different clients"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local server = MockNetwork.Server.new({"user1", "user2"})\nlocal user1, user2 = server:getClient("user1"), server:getClient("user2")\nlocal serverRemoteEvent = server:createRemoteEvent("replicateData")\n\nlocal user1RemoteEvent = user1:getRemoteEvent("replicateData")\nlocal user2RemoteEvent = user2:getRemoteEvent("replicateData")\n\nserverRemoteEvent:FireClient(user1, "Hello user1!")\nserverRemoteEvent:FireClient(user2, "Hello user2!")\n\n-- also demonstrates queueing behavior of remotes\n\nexpect(user1RemoteEvent.OnClientEvent:Wait()).to.equal("Hello user1!")\nexpect(user1RemoteEvent.OnClientEvent:Wait()).to.equal("Hello user2!")\n')),(0,o.kt)("p",null,(0,o.kt)("em",{parentName:"p"},"Using MockRemoteEvent"),"\\\nCan be used if you want to just test behavior for a single client"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local mockRemoteEvent = MockNetwork.MockRemoteEvent.new("user")\n\nmockRemoteEvent:FireClient("user", "Hello user!")\n\nexpect(mockRemoteEvent.OnClientEvent:Wait()).to.equal("Hello user!")\n')))}m.isMDXComponent=!0}}]);