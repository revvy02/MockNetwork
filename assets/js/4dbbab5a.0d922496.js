"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[281],{80215:function(e){e.exports=JSON.parse('{"functions":[{"name":"new","desc":"Constructs a new Server object","params":[{"name":"ids","desc":"","lua_type":"table"}],"returns":[{"desc":"","lua_type":"Server"}],"function_type":"static","source":{"line":25,"path":"src/Server.lua"}},{"name":"is","desc":"Returns whether or not the passed argument is a Server or not","params":[{"name":"obj","desc":"","lua_type":"any"}],"returns":[{"desc":"","lua_type":"bool"}],"function_type":"static","source":{"line":50,"path":"src/Server.lua"}},{"name":"createRemoteEvent","desc":"Creates a new RemoteEvent on server and clients","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteEventServer"}],"function_type":"method","source":{"line":60,"path":"src/Server.lua"}},{"name":"getRemoteEvent","desc":"Gets the RemoteEventServer instance","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteEventServer"}],"function_type":"method","errors":[{"lua_type":"\\"%s is not a valid RemoteEvent\\"","desc":""}],"source":{"line":76,"path":"src/Server.lua"}},{"name":"createRemoteFunction","desc":"Creates a new RemoteFunction on server and clients","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteFunctionServer"}],"function_type":"method","source":{"line":87,"path":"src/Server.lua"}},{"name":"getRemoteFunction","desc":"Gets the RemoteFunctionServer instance","params":[{"name":"name","desc":"","lua_type":"string"}],"returns":[{"desc":"","lua_type":"RemoteFunctionServer"}],"function_type":"method","errors":[{"lua_type":"\\"%s is not a valid RemoteFunction\\"","desc":""}],"source":{"line":103,"path":"src/Server.lua"}},{"name":"connect","desc":"Connects a new client to the server","params":[{"name":"id","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Client"}],"function_type":"method","source":{"line":114,"path":"src/Server.lua"}},{"name":"disconnect","desc":"Disconnects client from server","params":[{"name":"id","desc":"","lua_type":"string | number"}],"returns":[],"function_type":"method","source":{"line":123,"path":"src/Server.lua"}},{"name":"getClient","desc":"Gets the client object from id","params":[{"name":"id","desc":"","lua_type":"string | number"}],"returns":[{"desc":"","lua_type":"Client"}],"function_type":"method","source":{"line":133,"path":"src/Server.lua"}},{"name":"destroy","desc":"Prepares server for garbage collection","params":[],"returns":[],"function_type":"method","source":{"line":140,"path":"src/Server.lua"}}],"properties":[],"types":[],"name":"Server","desc":"Server class","source":{"line":16,"path":"src/Server.lua"}}')}}]);