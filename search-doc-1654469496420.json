[{"title":"RemoteFunctionClient","type":0,"sectionRef":"#","url":"api/RemoteFunctionClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RemoteFunctionClient","url":"api/RemoteFunctionClient#functions","content":" "},{"title":"invokeServer​","type":1,"pageTitle":"RemoteFunctionClient","url":"api/RemoteFunctionClient#invokeServer","content":"&lt;/&gt; RemoteFunctionClient:invokeServer(...: any) → any Sends a request to the server and yields until it receives a response  "},{"title":"InvokeServer​","type":1,"pageTitle":"RemoteFunctionClient","url":"api/RemoteFunctionClient#InvokeServer","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RemoteFunctionClient:InvokeServer(...: any) → any PascalCase alias for invokeServer "},{"title":"RemoteEventClient","type":0,"sectionRef":"#","url":"api/RemoteEventClient","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RemoteEventClient","url":"api/RemoteEventClient#functions","content":" "},{"title":"fireServer​","type":1,"pageTitle":"RemoteEventClient","url":"api/RemoteEventClient#fireServer","content":"&lt;/&gt; RemoteEventClient:fireServer(...: any) → () Fires the corresponding RemoteEventServer instance's OnServerEvent signal with the passed args  "},{"title":"FireServer​","type":1,"pageTitle":"RemoteEventClient","url":"api/RemoteEventClient#FireServer","content":"&lt;/&gt; RemoteEventClient:FireServer(...: any) → () PascalCase alias for fireServer "},{"title":"Client","type":0,"sectionRef":"#","url":"api/Client","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Client","url":"api/Client#properties","content":" "},{"title":"id​","type":1,"pageTitle":"Client","url":"api/Client#id","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Client.id: string Stores the id of the client passed in the constructor  "},{"title":"connected​","type":1,"pageTitle":"Client","url":"api/Client#connected","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; Client.connected: bool Tells whether the client object is connected or not "},{"title":"Functions​","type":1,"pageTitle":"Client","url":"api/Client#functions","content":" "},{"title":"getRemoteEvent​","type":1,"pageTitle":"Client","url":"api/Client#getRemoteEvent","content":"&lt;/&gt; Client:getRemoteEvent(name: string) → RemoteEventClient Gets the RemoteEventClient if it exists, returns nil otherwise "},{"title":"Errors","type":1,"pageTitle":"Client","url":"api/Client##","content":"Type\tDescription&quot;%s is not a valid RemoteEvent&quot;\t  "},{"title":"getRemoteFunction​","type":1,"pageTitle":"Client","url":"api/Client#getRemoteFunction","content":"&lt;/&gt; Client:getRemoteFunction(name: string) → RemoteFunctionClient Gets the RemoteFunctionClient if it exists, returns nil otherwise "},{"title":"Errors","type":1,"pageTitle":"Client","url":"api/Client##","content":"Type\tDescription&quot;%s is not a valid RemoteFunction&quot;\t  "},{"title":"disconnect​","type":1,"pageTitle":"Client","url":"api/Client#disconnect","content":"&lt;/&gt; Client:disconnect() → () Disconnects the client from the server  "},{"title":"destroy​","type":1,"pageTitle":"Client","url":"api/Client#destroy","content":"&lt;/&gt; Client:destroy() → () Alias for disconnect but sets destroyed field to true "},{"title":"RemoteEventServer","type":0,"sectionRef":"#","url":"api/RemoteEventServer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#functions","content":" "},{"title":"destroy​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#destroy","content":"&lt;/&gt; RemoteEventServer:destroy() → () Prepares RemoteEventServer for garbage collection  "},{"title":"fireClient​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#fireClient","content":"&lt;/&gt; RemoteEventServer:fireClient( client: Client, ...: any ) → () Fires the corresponding RemoteEventClient instance's OnClientEvent signal with the passed arguments  "},{"title":"fireAllClients​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#fireAllClients","content":"&lt;/&gt; RemoteEventServer:fireAllClients(...: any) → () Fires the corresponding RemoteEventClient instance's OnClientEvent signal with the passed arguments for each client  "},{"title":"FireClient​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#FireClient","content":"&lt;/&gt; RemoteEventServer:FireClient( client: Client, ...: any ) → () PascalCase alias for fireServer  "},{"title":"FireAllClients​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#FireAllClients","content":"&lt;/&gt; RemoteEventServer:FireAllClients(...: any) → () PascalCase alias for fireAllClients  "},{"title":"Destroy​","type":1,"pageTitle":"RemoteEventServer","url":"api/RemoteEventServer#Destroy","content":"&lt;/&gt; RemoteEventServer:Destroy() → () PascalCase alias for destroy "},{"title":"RemoteFunctionServer","type":0,"sectionRef":"#","url":"api/RemoteFunctionServer","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"RemoteFunctionServer","url":"api/RemoteFunctionServer#functions","content":" "},{"title":"destroy​","type":1,"pageTitle":"RemoteFunctionServer","url":"api/RemoteFunctionServer#destroy","content":"&lt;/&gt; RemoteFunctionServer:destroy() → () Called by Server to clean up  "},{"title":"invokeClient​","type":1,"pageTitle":"RemoteFunctionServer","url":"api/RemoteFunctionServer#invokeClient","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RemoteFunctionServer:invokeClient( client: Client, ...: any ) → any Sends a request to the client and yields until it responds  "},{"title":"InvokeClient​","type":1,"pageTitle":"RemoteFunctionServer","url":"api/RemoteFunctionServer#InvokeClient","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; RemoteFunctionServer:InvokeClient( client: Client, ...: any ) → any PascalCase alias for invokeClient  "},{"title":"Destroy​","type":1,"pageTitle":"RemoteFunctionServer","url":"api/RemoteFunctionServer#Destroy","content":"&lt;/&gt; RemoteFunctionServer:Destroy() → () PascalCase alias for destroy "},{"title":"MockRemoteEvent","type":0,"sectionRef":"#","url":"api/MockRemoteEvent","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#properties","content":" "},{"title":"OnClientEvent​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#OnClientEvent","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; MockRemoteEvent.OnClientEvent: Signal Signal property to listen to received data on client  "},{"title":"OnServerEvent​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#OnServerEvent","content":"This item is read only and cannot be modified. Read Only &lt;/&gt; MockRemoteEvent.OnServerEvent: Signal Signal property to listen to received data on server "},{"title":"Functions​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#functions","content":" "},{"title":"new​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#new","content":"&lt;/&gt; MockRemoteEvent.new(client: string) → MockRemoteEvent Constructs a new MockRemoteEvent object.  "},{"title":"fireServer​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#fireServer","content":"&lt;/&gt; MockRemoteEvent:fireServer(...: any) → () Fires OnServerEvent with the client and passed arguments  "},{"title":"fireClient​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#fireClient","content":"&lt;/&gt; MockRemoteEvent:fireClient( client: string, ...: any ) → () Fires OnClientEvent with the passed arguments  "},{"title":"fireAllClients​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#fireAllClients","content":"&lt;/&gt; MockRemoteEvent:fireAllClients(...: any) → () Fires OnClientEvent with the passed arguments  "},{"title":"getClient​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#getClient","content":"&lt;/&gt; MockRemoteEvent:getClient() → any Returns the client passed in the constructor  "},{"title":"destroy​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#destroy","content":"&lt;/&gt; MockRemoteEvent:destroy() → () Prepares the MockRemoteEvent instance for garbage collection  "},{"title":"FireServer​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#FireServer","content":"&lt;/&gt; MockRemoteEvent:FireServer(...: any) → () PascalCase alias for fireServer  "},{"title":"FireClient​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#FireClient","content":"&lt;/&gt; MockRemoteEvent:FireClient( client: string, ...: any ) → () PascalCase alias for fireClient  "},{"title":"FireAllClients​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#FireAllClients","content":"&lt;/&gt; MockRemoteEvent:FireAllClients(...: any) → () PascalCase alias for fireAllClients  "},{"title":"Destroy​","type":1,"pageTitle":"MockRemoteEvent","url":"api/MockRemoteEvent#Destroy","content":"&lt;/&gt; MockRemoteEvent:Destroy() → () PascalCase alias for destroy "},{"title":"MockRemoteFunction","type":0,"sectionRef":"#","url":"api/MockRemoteFunction","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#properties","content":" "},{"title":"OnClientInvoke​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#OnClientInvoke","content":"&lt;/&gt; MockRemoteFunction.OnClientInvoke: function Callback property to handle requests on client  "},{"title":"OnServerInvoke​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#OnServerInvoke","content":"&lt;/&gt; MockRemoteFunction.OnServerInvoke: function Callback property to handle requests on server "},{"title":"Functions​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#functions","content":" "},{"title":"new​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#new","content":"&lt;/&gt; MockRemoteFunction.new(client: string) → MockRemoteEvent Constructs a new MockRemoteFunction object.  "},{"title":"invokeServer​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#invokeServer","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; MockRemoteFunction:invokeServer(...: any) → any Sends a request to the server and yields until a response is received  "},{"title":"invokeClient​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#invokeClient","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; MockRemoteFunction:invokeClient( client: string, ...: any ) → any Sends a request to the client and yields until a response is received  "},{"title":"getClient​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#getClient","content":"&lt;/&gt; MockRemoteFunction:getClient() → any Gets the passed client argument in the constructor  "},{"title":"destroy​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#destroy","content":"&lt;/&gt; MockRemoteFunction:destroy() → () Prepares the MockRemoteFunction for garbage collection  "},{"title":"InvokeServer​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#InvokeServer","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; MockRemoteFunction:InvokeServer(...: any) → any PascalCase alias for invokeServer  "},{"title":"InvokeClient​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#InvokeClient","content":"This is a yielding function. When called, it will pause the Lua thread that called the function until a result is ready to be returned, without interrupting other scripts. Yields &lt;/&gt; MockRemoteFunction:InvokeClient( client: string, ...: any ) → any PascalCase alias for invokeClient  "},{"title":"Destroy​","type":1,"pageTitle":"MockRemoteFunction","url":"api/MockRemoteFunction#Destroy","content":"&lt;/&gt; MockRemoteFunction:Destroy() → () PascalCase alias for destroy "},{"title":"Server","type":0,"sectionRef":"#","url":"api/Server","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"Server","url":"api/Server#functions","content":" "},{"title":"new​","type":1,"pageTitle":"Server","url":"api/Server#new","content":"&lt;/&gt; Server.new(ids: table) → Server Constructs a new Server object  "},{"title":"createRemoteEvent​","type":1,"pageTitle":"Server","url":"api/Server#createRemoteEvent","content":"&lt;/&gt; Server:createRemoteEvent(name: string) → RemoteEventServer Creates a new RemoteEvent on server and clients  "},{"title":"getRemoteEvent​","type":1,"pageTitle":"Server","url":"api/Server#getRemoteEvent","content":"&lt;/&gt; Server:getRemoteEvent(name: string) → RemoteEventServer Gets the RemoteEventServer instance "},{"title":"Errors","type":1,"pageTitle":"Server","url":"api/Server##","content":"Type\tDescription&quot;%s is not a valid RemoteEvent&quot;\t  "},{"title":"createRemoteFunction​","type":1,"pageTitle":"Server","url":"api/Server#createRemoteFunction","content":"&lt;/&gt; Server:createRemoteFunction(name: string) → RemoteFunctionServer Creates a new RemoteFunction on server and clients  "},{"title":"getRemoteFunction​","type":1,"pageTitle":"Server","url":"api/Server#getRemoteFunction","content":"&lt;/&gt; Server:getRemoteFunction(name: string) → RemoteFunctionServer Gets the RemoteFunctionServer instance "},{"title":"Errors","type":1,"pageTitle":"Server","url":"api/Server##","content":"Type\tDescription&quot;%s is not a valid RemoteFunction&quot;\t  "},{"title":"connect​","type":1,"pageTitle":"Server","url":"api/Server#connect","content":"&lt;/&gt; Server:connect(id: string) → Client Connects a new client to the server  "},{"title":"disconnect​","type":1,"pageTitle":"Server","url":"api/Server#disconnect","content":"&lt;/&gt; Server:disconnect(id: string) → () Disconnects client from server  "},{"title":"getClient​","type":1,"pageTitle":"Server","url":"api/Server#getClient","content":"&lt;/&gt; Server:getClient(id: string) → Client Gets the client object from id  "},{"title":"destroy​","type":1,"pageTitle":"Server","url":"api/Server#destroy","content":"&lt;/&gt; Server:destroy() → () Prepares server for garbage collection "}]